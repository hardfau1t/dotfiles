;===========================================
(defwidget system []
  (eventbox :onhoverlost "${EWW_CMD} close system"
    (box :class "sys_win" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false" :spacing 0
      (box :class "sys_bat_box" :orientation "h" :space-evenly "false"
        (circular-progress :value "${EWW_BATTERY.BAT0.capacity}"
                  :class "sys_bat"
                  :start-at 25
                  :thickness 9
              (label :text ""
                  :class "sys_icon_bat"
                  :limit-width 2
                  :wrap false))
              (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
              (label :text "${EWW_BATTERY.BAT0.capacity}"
                  :halign "start"
                  :class "sys_text_bat"
                  :limit-width 9
                  :wrap false)
              (label :text "${EWW_BATTERY.BAT0.capacity}"
                  :halign "start"
                  :class "sys_text_bat_sub"
                  :limit-width 22
                  :wrap false)
              (label :text "${EWW_BATTERY.BAT0.status}"
                  :halign "start"
                  :class "sys_text_bat_sub"
                  :limit-width 22
                  :wrap false)
        )
      )
      (label :text "" :class "sys_sep" :halign "center")
    (box :class "sys_mem_box" :orientation "h" :space-evenly "false" :halign "start"
        (circular-progress :value "${EWW_RAM.used_mem_perc}"
                  :class "sys_mem"
                  :start-at 25
                  :thickness 9
              (label :text ""
                  :class "sys_icon_mem"
                  :limit-width 2
                  :wrap false
                  :angle 0.0))
              (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
              (label :text "Memory"
                  :halign "start"
                  :class "sys_text_mem"
                  :limit-width 9
                  :wrap false)
              (label :text "${round( EWW_RAM.used_mem / 1048576 , 0 )} | ${round(EWW_RAM.total_mem/ 1048576, 0)}mb "
                  :halign "start"
                  :class "sys_text_mem_sub"
                  :limit-width 22
                  :wrap false)
              (label :text "${round(EWW_RAM.available_mem / 1048576, 0)}mb free"
                  :halign "start"
                  :class "sys_text_mem_sub"
                  :limit-width 22
                  :wrap false)
        )
      )
    )
  )
)

(defwidget mem []
  (box :vexpand "false" :hexpand "false"
      (circular-progress :value "${EWW_RAM.used_mem_perc}"
          :thickness 2
          :start-at 25
          :class "progress"
        (button 
            :class "iconmem"
            :tooltip "using ${round(EWW_RAM.used_mem_perc, 1)}% ram"
            :onclick "${EWW_CMD} open system"
            "󰍛"
        )
      )
    )
)


(defwidget cpu []
  (box :vexpand "false" :hexpand "false"
      (circular-progress :value "${EWW_CPU.avg}"
          :thickness 2
          :start-at 25
          :class "progress"
        (button 
            :class "iconcpu"
            :tooltip "using ${round(EWW_CPU.avg, 1)}% cpu"
            :onclick "${EWW_CMD} open system"
            ""
        )
      )
    )
)


